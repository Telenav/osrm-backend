syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.telenav.traffic.grpc.proto";
option java_outer_classname = "TrafficProxy";

package proxy;

service TrafficProxy {
  rpc GetFlows(TrafficRequest) returns (TrafficResponse) {}
  rpc GetFlowsStreaming(TrafficStreamingRequest) returns (stream TrafficStreamingResponse) {}
}

message TrafficSource {
  string region = 1;
  string trafficProvider = 2;
  string mapProvider = 3;
}

message WayIdsStructure {
  repeated sint64 wayIds = 1;
}

message Flow {
  sint64 wayId = 1;
  float speed = 2;
  int32 trafficLevel = 3;
}

message FlowsStructure {
  repeated Flow flows = 1;
}



message TrafficRequest {
  TrafficSource trafficSource = 1;

  oneof WayIdFields {
    bool all = 2;               // get all flows
    sint64 wayId = 3;           // get flow by wayId
    WayIdsStructure wayIds = 4; // get flows by wayIds
  }
}

message TrafficResponse {
  int32 code = 1;   // error code, 0 means succeed
  string msg = 2;   // error message

  oneof FlowFields{
    Flow flow = 3;            // return single flow
    FlowsStructure flows = 4; // return flows
  }
}


message TrafficStreamingRequest {
  TrafficSource trafficSource = 1;

  message StreamingRules {
    // send flows by streaming when flow_count >= maxSize or not_send_time_interval >= maxTime seconds
    int32 maxSize = 1;    
    int32 maxTime = 2;    // unit: seconds
  }
  StreamingRules streamingRules = 2;
}

message TrafficStreamingResponse {
    FlowsStructure flows = 1; 
}




