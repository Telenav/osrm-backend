apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
{{- if .Values.labels }}    
{{ toYaml .Values.labels | indent 4}}
{{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
{{- if .Values.labels }}         
{{ toYaml .Values.labels | indent 8}}
{{- end }}        
    spec:
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      containers:
        - name: {{ .Values.osrm.backend.name }}
          image: {{ .Values.osrm.backend.image }}
          imagePullPolicy: IfNotPresent
          command: 
          {{- toYaml .Values.osrm.backend.command | nindent 12 }}
          {{- if .Values.osrm.backend.resources }}   
          resources:
{{ toYaml .Values.osrm.backend.resources | indent 12}}
          {{- end }}        
          volumeMounts:
          - mountPath: {{ .Values.osrm.backend.mountPath }}
            name:  {{ .Values.logsVolume.name }}
          ports:
          - containerPort: {{ .Values.osrm.backend.containerPort }}
            protocol: TCP
          readinessProbe:
            tcpSocket:
              port: {{ .Values.osrm.backend.containerPort }}
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 1000
      volumes:
        - name: {{ .Values.logsVolume.name }}
          nfs:
            server: {{ .Values.logsVolume.nfs.server }}
            path: {{ .Values.logsVolume.nfs.path }}
